#!/bin/sh
#/
#/ NAME:
#/ cleanup-test-repos - Deletes every repository for the user or org specified up to
#/ 30 repositories with every execution due to default pagination.
#/
#/ SYNOPSIS:
#/ cleanup-test-repos org_name string_pattern
#/
#/ DESCRIPTION:
#/ Deletes every repository for the organization that matches
#/ a string. Will delete up to 30 repositories
#/ with every execution.
#/
#/ PRE-REQUISITES:
#/
#/ This script uses jq to parse the JSON returned from GitHub's
#/ API. To install jq, visit:
#/
#/ https://stedolan.github.io/jq/download/
#/
#/ Before running this script, you must create a Personal Access Token (PAT)
#/ at https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/
#/ with the permissions <repo> and <delete_repo> scopes. Read more
#/ about scopes here: https://developer.github.com/apps/building-oauth-apps/scopes-for-oauth-apps/
#/ Once created, you must export your PAT as an environment variable
#/ named <GHE_TOKEN>.
#/   * Exporting PAT as GHE_TOKEN
#/   $ export GHE_TOKEN=abcd1234efg567


ORG_NAME=$1


response="$(curl --url ${GHE_URL}/api/v3/orgs/${ORG_NAME}/repos \
  -s \
  --header "authorization: Bearer ${GHE_TOKEN}"

for repo in $(echo "${response}" | jq -r '.[] | @base64'); do
    _jq() {
     echo ${repo} | base64 --decode | jq -r ${1}
    }

   REPO_NAME=$(_jq '.name')

   echo "Deleting repo: ${REPO_NAME}"
   curl --request DELETE \
      --url https://api.github.com/repos/${ORG_NAME}/${REPO_NAME} \
      --header "authorization: Bearer ${GHE_TOKEN}"


done
